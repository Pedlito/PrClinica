@model BD_PR_01_Clinicas.Models.tbUsuario

@{
    ViewBag.Title = "EditarUsuario";
}

<h2>Editar</h2>


@using (Html.BeginForm("EditarUsuario", "Account", FormMethod.Post, new { @id = "formIdEst", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Usuario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.codUsuario)

        <div class="form-group">
            @Html.Label("Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 entrada">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("DPI", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 entrada">
                @Html.EditorFor(model => model.dpi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dpi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Carnet", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 entrada">
                @Html.EditorFor(model => model.carnet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.carnet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Fecha de nacimiento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 entrada">
                @*<input type="date" id="fechaNacimiento" name="fechaNacimiento" class="form-control" value="@Model.fechaNacimiento.ToString("yyyy-MM-dd")"/>*@
                @*@Html.EditorFor(model => model.fechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.fechaNacimiento, @Model.fechaNacimiento.ToShortDateString(), new { @class = "form-control", @ReadOnly = true  })
                @Html.ValidationMessageFor(model => model.fechaNacimiento,"", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 entrada">
                @Html.EditorFor(model => model.usuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.usuario, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Contraseña", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 entrada">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Cancelar", "Index","Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>

    $("#fechaNacimiento").datepicker({
        changeMonth: true,
        changeYear: true,
        autoclose: true,
        yearRange: '-80:-17',
        defaultDate: '20/10/2000'
    });

    $.validator.addMethod("soloNumeros", function (value, element) {
        return /^[0-9]+$/i.test(value);
    }, "Ingrese sólo numeros");

    $.validator.addMethod("soloLetras", function (value, element) {
        return /^[a-zA-Z ]+$/i.test(value);
    }, "Ingrese sólo Letras");

    $("#formIdEst").validate({
        errorClass: 'help-block animation-slideDown',
        errorElement: 'div',
        errorPlacement: function (error, e) {
            e.parents('.form-group > div').append(error);
        },
        highlight: function (e) {

            $(e).closest('.entrada').removeClass('has-success has-error').addClass('has-error');
            $(e).closest('.help-block').remove();
        },
        success: function (e) {
            e.closest('.entrada').removeClass('has-success has-error');
            e.closest('.help-block').remove();
        },
        rules: {
            nombre: { required: true, soloLetras: true, minlength: 3 },
            dpi: { required: true, soloNumeros: true, minlength: 12 },
            carnet:{required:true,soloNumeros:true, minlength: 8},
            fechaNacimiento: { required: true },
            usuario: { required: true, minlength: 3 },
            password: { required: true, minlength: 4 },
       

        },
        messages: {
            nombre: {
                required: "Debe introducir su nombre",
                minlength: "Tres caracteres como minimo"
            },

            dpi: {
                required: "Debe introducir un numero de identificacion",
                minlength: "12 caracteres minimo"
            },
            carnet: {
                required: "Debe introducir un numero de identificacion",
                minlength: "8 caracteres minimo"
            },
            fechaNacimiento: "Fecha nacimiento requerida",

            usuario: {
                required: "Debe introducir un nombre de usuario",
                minlength: "3 caracteres como minimo"
            },
            password: {
                required: "Debe introducir una contraseña",
                minlength: "4 caracteres como minimo"
            },

        }

    });
</script>
}
