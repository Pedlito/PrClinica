@model BD_PR_01_Clinicas.Models.HistoriaClinica
@using BD_PR_01_Clinicas.Models
@{
    ViewBag.Title = "Crear";
}
@*@Model.tbPaciente.nombre*@
<div class="page-header">
    <h1>
        Historia Clinica <small>@Model.paciente.nombre</small>
        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#listaConsultas" onclick="LlenarConsultas(@Model.consulta.codPaciente)">
            <span class="glyphicon glyphicon-th-list"></span> Ver Consultas
        </button>
    </h1>
</div>

<div>
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#paciente" role="tab" data-toggle="tab">Paciente</a></li>
        <li role="presentation"><a href="#consulta" role="tab" data-toggle="tab">Consulta</a></li>
        <li role="presentation"><a href="#patologicos" role="tab" data-toggle="tab">Patológicos</a></li>
        <li role="presentation"><a href="#nPatologicos" role="tab" data-toggle="tab">No Patológicos</a></li>
        <li role="presentation"><a href="#perfil" role="tab" data-toggle="tab">Perfil</a></li>
        <li role="presentation"><a href="#revision" role="tab" data-toggle="tab">Revisión</a></li>
        <li role="presentation"><a href="#signos" role="tab" data-toggle="tab">Signos</a></li>
        <li role="presentation"><a href="#problemas" role="tab" data-toggle="tab">Problemas</a></li>
        <li role="presentation"><a href="#planes" role="tab" data-toggle="tab">Planes</a></li>
        <li role="presentation"><a href="#receta" role="tab" data-toggle="tab">Receta</a></li>
        <li role="presentation"><a href="#laboratorios" role="tab" data-toggle="tab">Laboratorios</a></li>
        <li role="presentation"><a href="#diagnostico" role="tab" data-toggle="tab">Diagnostico</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">

        <div role="tabpanel" class="tab-pane active" id="paciente">
            <h2>Datos Generales del Paciente</h2>
            <form>
                <!-- Formulario -->
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.Label("Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.paciente.nombre, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Genero", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.paciente.genero, true)Masculino</label>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.paciente.genero, false)Femenino</label>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Fecha Nacimiento</label>
                            @*@Html.Label("Fecha Nacimiento", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-10">
                                @if (@Model.paciente.fechaNacimiento != null)
                                {
                                    <input type="date" id="fechaNacimiento" class="form-control" value='@Model.paciente.fechaNacimiento.Value.ToString("yyy-MM-dd")' />
                                }
                                else
                                {
                                    <input type="date" id="fechaNacimiento" class="form-control" />

                                }
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Estado Civil", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.paciente.estadoCivil, true)Soltero</label>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.paciente.estadoCivil, false)Casado</label>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Residencia", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.paciente.residencia, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Procedencia", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.paciente.procedencia, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Religíon", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.paciente.religion, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Profesión", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.paciente.profesion, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Raza/Etnia", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.paciente.razaEtnia, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Escolaridad", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.paciente.escolaridad, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Tipo de Sangre", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("paciente_codTipoSangre", null, "Seleccione un tipo de sangre", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="consulta">
            <h2>Consulta</h2>
            <form>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.Label("Motivo de Consulta", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.consulta.motivoConsulta, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Historia Enfermedad", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.consulta.HistoriaEnfermedad, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Fecha Llegada", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="date" id="fechaLlegada" value="@Model.consulta.fechaLlegada.Value.ToString("yyy-MM-dd")" readonly class="form-control" />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Hora Llegada", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="time" id="fechaLlegada" value="@Model.consulta.fechaLlegada.Value.ToShortTimeString()" readonly class="form-control" />
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="patologicos">
            <h2>Antecedentes Patológicos</h2>
            <form>
                <!-- Formulario -->
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.Label("Padre", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.patologicos.padre, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Madre", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.patologicos.madre, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Médicos", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.patologicos.medicos, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Quirúrgicos", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.patologicos.quirurgicos, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Traumáticos", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.patologicos.traumaticos, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Alérgicos", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.patologicos.alergicos, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Gineco-Obstétricos", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.patologicos.ginecoObstetricos, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Vicios y Manias", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.patologicos.viciosManias, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="nPatologicos">
            <h2>Antecedentes No Patológicos</h2>
            <form>
                <!-- Formulario -->
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.Label("Prenatal", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.noPatologicos.prenatal, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Natal", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.noPatologicos.natal, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Posnatal", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.noPatologicos.posnatal, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Desarrollo", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <button type="button" class="btn btn-info" data-toggle="modal" data-target="#hitos">Llenar Formulario</button>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Inmunizaciónes", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.noPatologicos.inmunizaciones, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Alimentación", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.noPatologicos.alimentacion, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Hábitos", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.noPatologicos.habitos, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        @if (Model.paciente.genero == false)
                        {
                            <div class="form-group">
                                @Html.Label("Gineco-Obstetricos", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#mujeres">Llenar Formulario</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="revision">
            <h2>Revisión por Sistemas</h2>
            <form>
                <!-- Formulario -->
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.Label("Conducta", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.revision.conducta, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Piel y faneras", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.revision.piel, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Cabeza", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.revision.cabeza, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Ojos", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.revision.ojos, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Oídos", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.revision.oidos, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("nariz", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.revision.nariz, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Vicios y Manias", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.revision.vicios, new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="perfil">
            <h2>Perfil Social</h2>
            <form>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.Label("Estilo de Vida", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.perfilSocial.estiloVida, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Vivienda", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.perfilSocial.vivienda, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Situacion Familiar", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.perfilSocial.situacionFamiliar, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Ingreso Económico", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.perfilSocial.ingresoEconomico, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Animales", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.perfilSocial.animales, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Tendencia Sexual", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.perfilSocial.tendenciaSexual, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Punto de vista", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.perfilSocial.puntoVista, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="signos">
            <h2>Signos Vitales</h2>
            <form>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.Label("Peso", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.peso, new { htmlAttributes = new { @class = "form-control", onkeypress = "return numerico(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Talla", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.talla, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Indice de Masa Corporal", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.indiceMasaCorporal, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Presión Arterial", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.presionArterial, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Frecuencia Cardiaca", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.frecuenciaCardiaca, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Frecuencia Respiratoria", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.frecuenciaRespiratoria, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Temperatura", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.temperatura, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Circunferencia Cefálica", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.circCefalica, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Circunferencia Abdominal", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.circAbdominal, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>

                    @if (Model.paciente.genero == false)
                    {
                        <div class="form-group">
                            @Html.Label("Foco Fetal", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.signos.focoFetal, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Altura de Fondo Uterino", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.signos.alturaFondoUterino, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        @Html.Label("Pulso", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.pulso, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Saturación de Oxigeno", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.signos.saturacionOxigeno, new { htmlAttributes = new { @class = "form-control", onkeypress = "return decimal(event)" } })
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="problemas">
            <h2>Listado de Problemas</h2>
            <form>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" style="margin-left: 20px">
                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#agregarProblema">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Agregar Problema
                        </button>
                    </div>

                    <div id="listaProblemas">

                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="planes">
            <h2>Plan y Diagnostico Diferencial</h2>
            <form>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.Label("Plan Inicial", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.planes.planInicial, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Plan Diagnostico", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.planes.planDiagnostico, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Diagnostico Diferencial", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.planes.diagnosticoDiferencial, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Plan Educacional", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.planes.planEducacional, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <hr />

                    <h3>Plan Terapeutico</h3>
                    <div class="form-group">
                        @Html.Label("Actividad", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.terapeutico.actividad, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Dieta", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.terapeutico.dieta, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Controles Especificos", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.terapeutico.controlesEspecificos, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Otras Terapias", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.terapeutico.otrasTerapias, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div role="tabpanel" class="tab-pane" id="receta">
            <h2>Receta Medica</h2>
            <div class="form-group">
                <button type="button" class="btn btn-info" data-toggle="modal" data-target="#listaMedicamentos">
                    <span class="glyphicon glyphicon-plus"></span> Agregar
                </button>
            </div>
            <div id="detalle">

            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <a href="@Url.Action("Entregar","EntregaMedicamento", new { codPaciente = Model.consulta.codPaciente })" target="_blank" class="btn btn-primary">
                        <span class="glyphicon glyphicon-th-list"></span> Entregar Medicamentos
                    </a>
                </div>
                <div class="col-md-9">
                    <p>
                        @*action link de unobtrusive ajax que me permite optener una respuesta de exito o fallo del servidor para generar recetamedica*@
                        @Ajax.ActionLink("Generar receta", "verConsulta", routeValues: new {cod = Model.consulta.codConsulta},htmlAttributes: new  { @class = "btn btn-primary" },
                       ajaxOptions: new AjaxOptions {HttpMethod ="POST",OnSuccess= "OnSuccess", OnFailure = "OnFailure" })

                    </p>

                </div>
            </div>
        </div>

        <div role="tabpanel" class="tab-pane" id="laboratorios">
            <h2>Listado de Laboratorios</h2>
            <div class="form-group">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#agregarLab">
                    <span class="glyphicon glyphicon-plus"></span> Agregar Laboratorio
                </button>
            </div>
            <div id="listaLabs">

            </div>
        </div>

        <div role="tabpanel" class="tab-pane" id="diagnostico">
            <h2>Diagnostico Final</h2>
            <form>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.Label("Impresión Clínica", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.diagnostico.impresionClinica, new { @class = "form-control", rows = "4", maxlength = "700" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Médico", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("consulta_codMedico", null, "Seleccione una Médico", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </form>
        </div>

    </div>

</div>

<!-- botones de pie de pagina-->
<div class="form-inline">
    <div class="form-group">
        <button type="button" onclick="guardar(1)" class="btn btn-primary btn-lg">
            <span class="glyphicon glyphicon-floppy-saved" aria-hidden="true"></span> Guardar Avances
        </button>
    </div>

    <div class="form-group">
        <button type="button" onclick="guardar(2)" class="btn btn-success btn-lg">
            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Finalizar Historia Clinica
        </button>
    </div>

    <div class="form-group right">
        <a href="@Url.Action("Index")" class="btn btn-danger btn-lg" onclick="return confirm('¿Realmente desea cancelar?')">
            <span class="glyphicon glyphicon-remove"></span> Cancelar
        </a>
    </div>
</div>

<!-- modal para formulario de meses-->
<div class="modal fade" id="hitos" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Desarrollo</h4>
            </div>
            <div class="modal-body">

                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th class="text-center">
                                @Html.DisplayName("Edad (Meses)")
                            </th>
                            <th>
                                @Html.DisplayName("Hito")
                            </th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="text-center">
                                1
                            </td>
                            <td>
                                <p>Levanta la cabeza</p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.uno, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.uno, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                2
                            </td>
                            <td>
                                <p>Eleva el torax</p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.dos, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.dos, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                3
                            </td>
                            <td>
                                <p>Intenta agarra objetos, pero no lo consigue</p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.tres, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.tres, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                4
                            </td>
                            <td>
                                <p>Se sostiene sentado, pero no lo consigue</p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.cuatro, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.cuatro, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                5
                            </td>
                            <td>
                                <p>agarra objetos</p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.cinco, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.cinco, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                6
                            </td>
                            <td>
                                <p>Aguanta sentado en una silla y aguanta objetos con mayor precisión</p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.seis, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.seis, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                7
                            </td>
                            <td>
                                <p>
                                    Aguanta sentado en una silla y aguanta objetos con mayor precisión,
                                    Se Destapa,
                                    Se pasa los objetos de mano y manipula,
                                    Si alguien lo sienta se mantiene sentado,
                                </p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.siete, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.siete, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                8
                            </td>
                            <td>
                                <p>
                                    Gatea,
                                    Juega a lanzar objetos,
                                    Extiende los brazos para que lo Levanten
                                </p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.ocho, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.ocho, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                9
                            </td>
                            <td>
                                <p>
                                    Se pone de pie con apoyo,
                                    Juega a taparse y destaparse,
                                    Imita gestos con las manos
                                </p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.nueve, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.nueve, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                10
                            </td>
                            <td>
                                <p>
                                    Se pone de pie apoyándose,
                                    Hace una pinza con índice y pulgar,
                                    Mete y saca un objeto de un recipiente
                                </p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.diez, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.diez, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                11
                            </td>
                            <td>
                                <p>
                                    Realiza los primeros pasos apoyándose,
                                    Señala con el índice y entiende algunas palabras,
                                    Entrega objetos
                                </p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.oncee, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.oncee, false)No</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-center">
                                12
                            </td>
                            <td>
                                <p>
                                    Se mantiene de pie sin apoyo,
                                    Baila al oír música,
                                    Mira su imagen en un espejo
                                </p>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.doce, true)Si</label>
                            </td>
                            <td>
                                <label class="radio-inline">@Html.RadioButtonFor(model => model.desarrollo.doce, false)No</label>
                            </td>
                        </tr>
                    </tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para datos de mujeres-->
<div class="modal fade" id="mujeres" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Mujeres</h4>
            </div>
            <div class="modal-body">

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.Label("Menarquia", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.mujeres.menarquia, new { htmlAttributes = new { @class = "form-control", onkeypress = "return numerico(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Ritmo", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <label class="radio-inline">@Html.RadioButtonFor(model => model.mujeres.ritmo, true) Regular </label>
                            <label class="radio-inline">@Html.RadioButtonFor(model => model.mujeres.ritmo, false)Irregular</label>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("FUR", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (Model.mujeres != null)
                            {
                                if (Model.mujeres.ultimaRegla != null)
                                {
                                    <input type="date" id="ultimaRegla" class="form-control" value='@Model.mujeres.ultimaRegla.Value.ToString("yyy-MM-dd")' />
                                }
                                else
                                {
                                    <input type="date" id="ultimaRegla" class="form-control" />
                                }
                            }
                            else
                            {
                                <input type="date" id="ultimaRegla" class="form-control" />
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Número Gestas", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.mujeres.numGestas, new { htmlAttributes = new { @class = "form-control", onkeypress = "return numerico(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Partos", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.mujeres.partos, new { htmlAttributes = new { @class = "form-control", onkeypress = "return numerico(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Cesareas", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.mujeres.cesareas, new { htmlAttributes = new { @class = "form-control", onkeypress = "return numerico(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Abortos", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.mujeres.abortos, new { htmlAttributes = new { @class = "form-control", onkeypress = "return numerico(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Hijos Vivos", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.mujeres.hijosVivos, new { htmlAttributes = new { @class = "form-control", onkeypress = "return numerico(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Hijos Muertos", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.mujeres.hijosMuertos, new { htmlAttributes = new { @class = "form-control", onkeypress = "return numerico(event)" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Método Planificación", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.mujeres.metodoPlanificacion, new { @class = "form-control", placeholder = "Ingrese una descripcion", rows = "4", maxlength = "700" })
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para lista de medicamentos-->
<div class="modal fade" id="listaMedicamentos" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Medicamentos</h4>
            </div>
            <div class="modal-body" id="medicamentos">

                <div class="form-group form-inline">
                    <input type="text" id="filtro" placeholder="Nombre" onkeyup="filtrar()" class="form-control" autocomplete="off" />
                    @if (FrontUser.TienePermiso(RolesPermisos.administrar_catalogo_prod))
                    {
                        <button type="button" class="btn btn-primary" data-dismiss="modal" data-toggle="modal" data-target="#agregarProducto">
                            <span class="glyphicon glyphicon-plus"></span> Nuevo
                        </button>
                    }
                </div>
                <div id="listado">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para lista de consultas-->
<div class="modal fade" id="listaConsultas" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Lista de Consultas</h4>
            </div>
            <div class="modal-body" id="consultas">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para pedir prescripcion-->
<div class="modal fade" id="prescripcion" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <form id="formPrescripcion">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.Label("Prescripcion", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextArea("descripcion", new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal" onclick="cambiarDescripcion()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para Crear Problemas-->
<div class="modal fade" id="agregarProblema" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Agregar Problema</h4>
            </div>
            <div class="modal-body">
                <form id="formProblema">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.Label("Problema", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextArea("nProblema", new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Datos Subjetivos", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextArea("nSubjetivos", new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Datos Objetivos", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextArea("nObjetivos", new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Analisis", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextArea("nAnalisis", new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal" onclick="return agregarProblema()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para Editar Problemas-->
<div class="modal fade" id="editarProblema" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="problemaModal">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Agregar Problema</h4>
            </div>
            <div class="modal-body" id="divEditar">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal" onclick="EditarProblema(@ViewBag.index)">Editar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para agregar Laboratorio-->
<div class="modal fade" id="agregarLab" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Agregar Laboratorio</h4>
            </div>
            <div class="modal-body">
                <form id="formLab">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.Label("Laboratorio", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownList("codLaboratorio", null, "Seleccione un Laboratorio", htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Resultado", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextArea("resultado", new { @class = "form-control", rows = "4", maxlength = "700" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal" onclick="return AgregarLab()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para agregar Producto-->
<div class="modal fade" id="agregarProducto" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Agregar Medicamento</h4>
            </div>
            <div class="modal-body">
                <form id="nuevoProducto">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.Label("Producto", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 entrada">
                                @Html.Editor("producto", new { htmlAttributes = new { @class = "form-control", maxlength = 50 } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Categoría", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10" style="padding-left: 0px">
                                <div class="col-md-5 entrada">
                                    @Html.DropDownList("codCategoria", null, "Seleccione una Categoría", htmlAttributes: new { @class = "form-control" })
                                </div>
                                @if (FrontUser.TienePermiso(RolesPermisos.administrar_categorias))
                                {
                                    <button class="btn btn-info" style="display:inline" type="button" data-toggle="modal" data-target="#nuevaCategoria">
                                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                    </button>
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Presentación", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10" style="padding-left: 0px">
                                <div class="col-md-5  entrada">
                                    @Html.DropDownList("codPresentacion", null, "Seleccione una Presentación", htmlAttributes: new { @class = "form-control col-md-3" })
                                </div>
                                @if (FrontUser.TienePermiso(RolesPermisos.administrar_presentaciones))
                                {
                                    <button class="btn btn-info" style="display:inline" type="button" data-toggle="modal" data-target="#nuevaPresentacion">
                                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                    </button>
                                }
                            </div>
                        </div>

                        <div class="form-group form-inline">
                            @Html.Label("Dosis", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3 entrada">
                                @Html.Editor("dosis", new { htmlAttributes = new { @class = "form-control", maxlength = 8 } })
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownList("codVolumen", null, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group form-inline">
                            @Html.Label("Segunda dosis", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3 entrada">
                                @Html.Editor("dosis2", new { htmlAttributes = new { @class = "form-control", maxlength = 8 } })
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownList("codVolumen2", null, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal" onclick="AgregarProducto()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para categoría-->
<div class="modal fade" id="nuevaCategoria" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Nueva Categoría</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("Categoría", htmlAttributes: new { @class = "control-label col-md-2", maxlength = 50 })
                            <div class="col-md-10" id="entrada">
                                <input class="form-control text-box single-line" id="categoria" name="categoria" type="text" value="" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="crearCategoria()">Crear y Asignar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para Presentación-->
<div class="modal fade" id="nuevaPresentacion" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Nueva Presentación</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("Presentación", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input class="form-control text-box single-line" id="presentacion" name="presentacion" type="text" value="" , maxlength=50 />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="crearPresentacion()">Crear y Asignar</button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    @*permete actualizar contenido usando ajax.AtionLink() lo utilice para porder verificar si ya se han guardado avances.*@
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
    <script>
        //funciones que me permiten mostrar un mensaje o generar la receta medica
        function OnFailure(xhr, status){
            alert("Debe agregar al menos un medicamento y guardar avances.");
        }
        function OnSuccess(data){
            window.location.href = '@Url.Action("imprimirReceta","Atencion",routeValues: new { cod = Model.consulta.codConsulta })';
        }//fin de codigo recetamedica
        var codConsulta = @Model.consulta.codConsulta;
        var codPaciente = @Model.paciente.codPaciente;
        var receta = [];
        var problemas = [];
        var laboratorios = [];
        var paraReceta = null;
        var index = 0;

        function LlenarConsultas(codPaciente){
            $.ajax({
                type: "POST",
                url: '@Url.Action("LlenarConsultas", "Atencion")',
                data: { codPaciente },
                success: function (response) {
                    $('#consultas').html(response);
                }
            });
        }

        function filtrar() {
            var filtro = $('#filtro').val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("Filtrar", "Atencion")',
                data: { filtro },
                success: function (response) {
                    $('#listado').html(response);
                }
            });
        }

        function agregar(codProducto) {
            var index = receta.findIndex(function (element) { return element.codProducto == codProducto });
            if (index == -1) {
                paraReceta = { codConsulta: codConsulta, codProducto: parseInt(codProducto), descripcion: "" };
                $('#prescripcion').modal('show');
            }
            else {
                alert("El Articulo seleccionado ya ha sido agregado");
            }
        }

        function cambiarDescripcion(){
            paraReceta.descripcion = $('#descripcion').val().replace(/\n+/g, " "),
            receta.push(paraReceta);
            paraReceta = null;
            $.ajax({
                traditional: true,
                url: '@Url.Action("DetalleReceta", "Atencion")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(receta),
                success: function (response) {
                    $('#listaMedicamentos').modal('hide');
                    $('#detalle').html(response);
                    $('#formPrescripcion').trigger("reset");

                }
            });
        }

        function quitarReceta(codProducto){
            var index = receta.findIndex(function (element) { return element.codProducto == codProducto });
            receta.splice(index,1);
            $.ajax({
                traditional: true,
                url: '@Url.Action("DetalleReceta", "Atencion")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(receta),
                success: function (response) {
                    $('#detalle').html(response);
                }
            });
        }

        function guardar(accion) {
            var paciente = {
                "codPaciente": codPaciente,
                "nombre": $('#paciente_nombre').val(),
                "genero": $('input[id=paciente_genero]:checked').val(),
                "fechaNacimiento": $('#fechaNacimiento').val(),
                "estadoCivil": $('input[id=paciente_estadoCivil]:checked').val(),
                "residencia": $('#paciente_residencia').val(),
                "procedencia": $('#paciente_procedencia').val(),
                "religion": $('#paciente_religion').val(),
                "profesion": $('#paciente_profesion').val(),
                "razaEtnia": $('#paciente_razaEtnia').val(),
                "escolaridad": $('#paciente_escolaridad').val(),
                "codTipoSangre": $('#paciente_codTipoSangre').val(),
            };
            var patologicos = {
                "codPaciente": codPaciente,
                "padre": $('#patologicos_padre').val(),
                "madre": $('#patologicos_madre').val(),
                "medicos": $('#patologicos_medicos').val(),
                "quirurgicos": $('#patologicos_quirurgicos').val(),
                "traumaticos": $('#patologicos_traumaticos').val(),
                "alergicos": $('#patologicos_alergicos').val(),
                "ginecoObstetricos": $('#patologicos_ginecoObstetricos').val(),
                "viciosManias": $('#patologicos_viciosManias').val(),
            };
            var noPatologicos = {
                "codPaciente": codPaciente,
                "prenatal": $('#noPatologicos_prenatal').val(),
                "natal": $('#noPatologicos_natal').val(),
                "posnatal": $('#noPatologicos_posnatal').val(),
                "inmunizaciones": $('#noPatologicos_inmunizaciones').val(),
                "alimentacion": $('#noPatologicos_alimentacion').val(),
                "habitos": $('#noPatologicos_habitos').val(),
            };
            var desarrollo = {
                "codPaciente": codPaciente,
                "uno": $('input[id=desarrollo_uno]:checked').val(),
                "dos": $('input[id=desarrollo_dos]:checked').val(),
                "tres": $('input[id=desarrollo_tres]:checked').val(),
                "cuatro": $('input[id=desarrollo_cuatro]:checked').val(),
                "cinco": $('input[id=desarrollo_cinco]:checked').val(),
                "seis": $('input[id=desarrollo_seis]:checked').val(),
                "siete": $('input[id=desarrollo_siete]:checked').val(),
                "ocho": $('input[id=desarrollo_ocho]:checked').val(),
                "nueve": $('input[id=desarrollo_nueve]:checked').val(),
                "diez": $('input[id=desarrollo_diez]:checked').val(),
                "oncee": $('input[id=desarrollo_once]:checked').val(),
                "doce": $('input[id=desarrollo_doce]:checked').val(),
            };
            var mujeres = {
                "codPaciente": codPaciente,
                "menarquia": $('#mujeres_menarquia').val(),
                "ritmo": $('input[id=mujeres_ritmo]:checked').val(),
                "ultimaRegla": $('#ultimaRegla').val(),
                "numGestas": $('#mujeres_numGestas').val(),
                "partos": $('#mujeres_partos').val(),
                "cesareas": $('#mujeres_cesareas').val(),
                "abortos": $('#mujeres_abortos').val(),
                "hijosVivos": $('#mujeres_hijosVivos').val(),
                "hijosMuertos": $('#mujeres_hijosMuertos').val(),
                "metodoPlanificacion": $('#mujeres_metodoPlanificacion').val(),
            };
            var perfilSocial = {
                "codPaciente": codPaciente,
                "estiloVida": $('#perfilSocial_estiloVida').val(),
                "vivienda": $('#perfilSocial_vivienda').val(),
                "situacionFamiliar": $('#perfilSocial_situacionFamiliar').val(),
                "ingresoEconomico": $('#perfilSocial_ingresoEconomico').val(),
                "animales": $('#perfilSocial_animales').val(),
                "tendenciaSexual": $('#perfilSocial_tendenciaSexual').val(),
                "puntoVista": $('#perfilSocial_puntoVista').val()
            };
            var revision = {
                "codConsulta": codConsulta,
                "conducta": $('#revision_conducta').val(),
                "piel": $('#revision_piel').val(),
                "cabeza": $('#revision_cabeza').val(),
                "ojos": $('#revision_ojos').val(),
                "oidos": $('#revision_oidos').val(),
                "nariz": $('#revision_nariz').val(),
                "vicios": $('#revision_vicios').val()
            }
            var signos = {
                "codConsulta": codConsulta,
                "peso": $('#signos_peso').val(),
                "talla": $('#signos_talla').val(),
                "indiceMasaCorporal": $('#signos_indiceMasaCorporal').val(),
                "presionArterial": $('#signos_presionArterial').val(),
                "frecuenciaCardiaca": $('#signos_frecuenciaCardiaca').val(),
                "frecuenciaRespiratoria": $('#signos_frecuenciaRespiratoria').val(),
                "temperatura": $('#signos_temperatura').val(),
                "circCefalica": $('#signos_circCefalica').val(),
                "circAbdominal": $('#signos_circAbdominal').val(),
                "focoFetal": $('#signos_focoFetal').val(),
                "alturaFondoUterino": $('#signos_alturaFondoUterino').val(),
                "pulso": $('#signos_pulso').val(),
                "saturacionOxigeno": $('#signos_saturacionOxigeno').val(),
            };
            var planes = {
                "codConsulta": codConsulta,
                "planInicial": $('#planes_planInicial').val(),
                "planDiagnostico": $('#planes_planDiagnostico').val(),
                "diagnosticoDiferencial": $('#planes_diagnosticoDiferencial').val(),
                "planEducacional": $('#planes_planEducacional').val(),
            };
            var terapeutico = {
                "codConsulta": codConsulta,
                "actividad": $('#terapeutico_actividad').val(),
                "dieta": $('#terapeutico_dieta').val(),
                "controlesEspecificos": $('#terapeutico_controlesEspecificos').val(),
                "otrasTerapias": $('#terapeutico_otrasTerapias').val(),
            };
            var diagnostico = {
                "codConsulta": codConsulta,
                "impresionClinica": $('#diagnostico_impresionClinica').val()
            };
            var consulta = {
                "codConsulta": codConsulta,
                "motivoConsulta": $('#consulta_motivoConsulta').val(),
                "HistoriaEnfermedad": $('#consulta_HistoriaEnfermedad').val(),
                "codMedico": $('#consulta_codMedico').val()
            };
            var historia = {
                "accion": accion,
                "consulta": consulta,
                "paciente": paciente,
                "patologicos": patologicos,
                "noPatologicos": noPatologicos,
                "desarrollo": desarrollo,
                "perfilSocial": perfilSocial,
                "mujeres": mujeres,
                "revision": revision,
                "signos": signos,
                "problemas": problemas,
                "laboratorios": laboratorios,
                "planes": planes,
                "terapeutico": terapeutico,
                "receta": receta,
                "diagnostico": diagnostico
            };
            if (consulta.codMedico == "") {
                alert("Es obligatorio seleccionar un Médico en el Diagnostico");
            }
            else
            {
                $.ajax({
                    url: '@Url.Action("GuardarHC", "Atencion")',
                    type: "POST",
                    data: { "historia": historia },
                    success: function (response) {
                        window.location.href = response;
                    }
                });
            }
        }

        function agregarProblema() {
            if ($('#nProblema').val() != "") {
                problemas.push({
                    codConsulta: codConsulta,
                    problema: $('#nProblema').val().replace(/\n+/g, " "),
                    subjetivos: $('#nSubjetivos').val().replace(/\n+/g, " "),
                    objetivos: $('#nObjetivos').val().replace(/\n+/g, " "),
                    analisis: $('#nAnalisis').val().replace(/\n+/g, " ")
                });
                $.ajax({
                    traditional: true,
                    url: '@Url.Action("Problemas", "Atencion")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(problemas),
                    success: function (response) {
                        $('#listaProblemas').html(response);
                        $('#formProblema').trigger("reset");
                        return true;
                    }
                });
            }
            else {
                alert("El nombre del problema es obligatorio");
                return false;
            }
        }

        function Quitar(problema) {
            var index = problemas.findIndex(function (element) { return element.problema == problema });
            problemas.splice(index, 1);
            $.ajax({
                traditional: true,
                url: '@Url.Action("Problemas", "Atencion")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(problemas),
                success: function (response) {
                    $('#listaProblemas').html(response);
                }
            });
        }

        function LlenarEditar(problema) {
            index = problemas.findIndex(function (element) { return element.problema == problema });
            var datos = {index: index, problema: problemas[index]};
             $.ajax({
                    url: '@Url.Action("LlenarEditar", "Atencion")',
                    type: "POST",
                    data: { problema: datos },
                    success: function (response) {
                        $('#divEditar').html(response);
                        $('#editarProblema').modal('show');
                    }
                });
        }

        function EditarProblema(){
            problemas[index].problema = $('#problema').val().replace(/\n+/g, " ");
            problemas[index].objetivos = $('#objetivos').val().replace(/\n+/g, " ");
            problemas[index].subjetivos = $('#subjetivos').val().replace(/\n+/g, " ");
            problemas[index].analisis = $('#analisis').val().replace(/\n+/g, " ");
            $.ajax({
                traditional: true,
                url: '@Url.Action("Problemas", "Atencion")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(problemas),
                success: function (response) {
                    $('#listaProblemas').html(response);
                }
            });
        }

        function AgregarLab() {
            if ($('#codLaboratorio').val() != "" && $('#resultado').val() != "") {
                var index = laboratorios.findIndex(function (element) { return element.codLaboratorio == $('#codLaboratorio').val() });
                if (index == -1) {
                    laboratorios.push({
                        codConsulta: codConsulta,
                        codLaboratorio: $('#codLaboratorio').val(),
                        resultado: $('#resultado').val().replace(/\n+/g, " ")
                    });
                    $.ajax({
                        traditional: true,
                        url: '@Url.Action("Laboratorios", "Atencion")',
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(laboratorios),
                        success: function (response) {
                            $('#formLab').trigger("reset");
                            $('#listaLabs').html(response);

                        }
                    });
                }
                else {
                    alert("Este laboratorio ya fue agregado");
                }
            }
            else {
                alert("El laboratorio y el resultado son obligatorios");
                return false;
            }
        }

        function QuitarLab(codLab) {
            var index = laboratorios.findIndex(function (element) { return element.codLaboratorio == codLab });
            laboratorios.splice(index, 1);
            $.ajax({
                traditional: true,
                url: '@Url.Action("Laboratorios", "Atencion")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(laboratorios),
                success: function (response) {
                    $('#listaLabs').html(response);
                }
            });
        }

        function numerico(event){
            var n = event.charCode;
            var respuesta = ((n >= 48 && n <= 57) || n == 0);
            return respuesta;
        }

        function decimal(event){
            var n = event.charCode;
            var respuesta = ((n >= 48 && n <= 57) || n == 46 || n == 0);
            return respuesta;
        }

        window.onload = function (){
            $('#paciente_codTipoSangre > option[value="@Model.paciente.codTipoSangre"]').attr('selected', 'selected');
            $('#consulta_codMedico > option[value="@Model.consulta.codMedico"]').attr('selected', 'selected');
            var codConsulta = @Model.consulta.codConsulta;
            var length = @Model.problemas.Count;
            @foreach (var item in Model.problemas)
            {
                @:problemas.push({ codConsulta: @item.codConsulta, problema: "@item.problema", subjetivos: "@item.subjetivos", objetivos: "@item.objetivos", analisis: "@item.analisis"});
            }
            @foreach (var item in Model.receta)
            {
                @:receta.push({ codConsulta: @item.codConsulta, codProducto: "@item.codProducto", descripcion: "@item.descripcion"});
            }
            @foreach (var item in Model.laboratorios)
            {
                @:laboratorios.push({ codConsulta: @item.codConsulta, codLaboratorio: @item.codLaboratorio, resultado: "@item.resultado"});
            }
            QuitarTildes();
            //llama a la vista parcial de problemas
            $.ajax({
                traditional: true,
                url: '@Url.Action("Problemas", "Atencion")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(problemas),
                success: function (response) {
                    $('#listaProblemas').html(response);
                    return true;
                }
            });
            //llama a la vista parcial para la receta
            $.ajax({
                traditional: true,
                url: '@Url.Action("DetalleReceta", "Atencion")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(receta),
                success: function (response) {
                    $('#detalle').html(response);
                }
            });
            //llama a la vista parcial para laboratorios
            $.ajax({
                traditional: true,
                url: '@Url.Action("Laboratorios", "Atencion")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(laboratorios),
                success: function (response) {
                    $('#listaLabs').html(response);
                }
            });
        }

        //nuevo medicamento
        function AgregarProducto() {
            //validacion de categoria
            if ($("#producto").val().length <= 2) { alert("Nombre invalido, se requiere como minimo 3 caracteres"); return; }
            var producto = {
                producto: $('#producto').val(),
                codCategoria: $('#codCategoria').val(),
                codPresentacion: $('#codPresentacion').val(),
                dosis: $('#dosis').val(),
                codVolumen: $('#codVolumen').val(),
                dosis2: $('#dosis2').val(),
                codVolumen2: $('#codVolumen2').val()
            };
            $.ajax({
                url: '@Url.Action("NuevoProducto", "Producto")',
                type: "POST",
                dataType: "json",
                data: { producto: producto },
                success: function (producto) {
                    paraReceta = { codConsulta: codConsulta, codProducto: producto, descripcion: "" };
                    $('#prescripcion').modal('show');
                    $('#agregarProducto').modal('hide');
                },
                error: function (response) {
                    alert("error");
                }
            })
        }

        //nueva categoria
        function crearCategoria() {
            //validacion de categoria
            if ($("#categoria").val().length <= 2) { alert("Nombre invalido, se requiere como minimo 3 caracteres"); return; }
            var categoria = {
                "categoria": document.getElementById("categoria").value,
                "estado": true
            };
            $.ajax({
                url: '@Url.Action("nuevaCategoria", "Producto")',
                type: "POST",
                dataType: "json",
                data: { "categoria": categoria },
                success: function (categoria) {
                    var item = "<option value='" + categoria.codCategoria + "'>" + categoria.categoria + "</option>"
                    $('#codCategoria').append(item);
                    document.getElementById("codCategoria").value = categoria.codCategoria;
                    $('#nuevaCategoria').modal('hide');
                },
                error: function (response) {
                    alert("error");
                }
            })
        }

        //nueva presentación
        function crearPresentacion() {
            // validacion de presentacion
            if ($("#presentacion").val().length <= 2) { alert("Nombre invalido, se requiere como minimo 3 caracteres"); return; }
            var presentacion = {
                "presentacion": document.getElementById("presentacion").value,
                "estado": true
            };
            $.ajax({
                url: '@Url.Action("NuevaPresentacion", "Producto")',
                type: "POST",
                dataType: "json",
                data: { "presentacion": presentacion },
                success: function (presentacion) {
                    var item = "<option value='" + presentacion.codPresentacion + "'>" + presentacion.presentacion + "</option>"
                    $('#codPresentacion').append(item);
                    document.getElementById("codPresentacion").value = presentacion.codPresentacion;
                    $('#nuevaPresentacion').modal('hide');
                },
                error: function (response) {
                    alert("error");
                }
            })
        }

        function vacio(input, nab){
            if (input.val() == "") {
                alert("Existe uno o varios campos vacios")
                $(nab).tab('show');
                input.focus();
                return false;
            }
            else{
                return true;
            }
        }

        function QuitarTildes() {
            problemas.forEach(function (item) {
                item.problema = item.problema.replace(/&#225;/g, "á");
                item.problema = item.problema.replace(/&#233;/g, "é");
                item.problema = item.problema.replace(/&#237;/g, "í");
                item.problema = item.problema.replace(/&#243;/g, "ó");
                item.problema = item.problema.replace(/&#250;/g, "ú");
                item.problema = item.problema.replace(/&#193;/g, "Á");
                item.problema = item.problema.replace(/&#201;/g, "É");
                item.problema = item.problema.replace(/&#205;/g, "Í");
                item.problema = item.problema.replace(/&#211;/g, "Ó");
                item.problema = item.problema.replace(/&#218;/g, "Ú");
                item.problema = item.problema.replace(/&#241;/g, "ñ");

                item.subjetivos = item.subjetivos.replace(/&#225;/g, "á");
                item.subjetivos = item.subjetivos.replace(/&#233;/g, "é");
                item.subjetivos = item.subjetivos.replace(/&#237;/g, "í");
                item.subjetivos = item.subjetivos.replace(/&#243;/g, "ó");
                item.subjetivos = item.subjetivos.replace(/&#250;/g, "ú");
                item.subjetivos = item.subjetivos.replace(/&#193;/g, "Á");
                item.subjetivos = item.subjetivos.replace(/&#201;/g, "É");
                item.subjetivos = item.subjetivos.replace(/&#205;/g, "Í");
                item.subjetivos = item.subjetivos.replace(/&#211;/g, "Ó");
                item.subjetivos = item.subjetivos.replace(/&#218;/g, "Ú");
                item.subjetivos = item.subjetivos.replace(/&#241;/g, "ñ");

                item.objetivos = item.objetivos.replace(/&#225;/g, "á");
                item.objetivos = item.objetivos.replace(/&#233;/g, "é");
                item.objetivos = item.objetivos.replace(/&#237;/g, "í");
                item.objetivos = item.objetivos.replace(/&#243;/g, "ó");
                item.objetivos = item.objetivos.replace(/&#250;/g, "ú");
                item.objetivos = item.objetivos.replace(/&#193;/g, "Á");
                item.objetivos = item.objetivos.replace(/&#201;/g, "É");
                item.objetivos = item.objetivos.replace(/&#205;/g, "Í");
                item.objetivos = item.objetivos.replace(/&#211;/g, "Ó");
                item.objetivos = item.objetivos.replace(/&#218;/g, "Ú");
                item.objetivos = item.objetivos.replace(/&#241;/g, "ñ");

                item.analisis = item.analisis.replace(/&#225;/g, "á");
                item.analisis = item.analisis.replace(/&#233;/g, "é");
                item.analisis = item.analisis.replace(/&#237;/g, "í");
                item.analisis = item.analisis.replace(/&#243;/g, "ó");
                item.analisis = item.analisis.replace(/&#250;/g, "ú");
                item.analisis = item.analisis.replace(/&#193;/g, "Á");
                item.analisis = item.analisis.replace(/&#201;/g, "É");
                item.analisis = item.analisis.replace(/&#205;/g, "Í");
                item.analisis = item.analisis.replace(/&#211;/g, "Ó");
                item.analisis = item.analisis.replace(/&#218;/g, "Ú");
                item.analisis = item.analisis.replace(/&#241;/g, "ñ");
            })

            receta.forEach(function (item) {
                item.descripcion = item.descripcion.replace(/&#225;/g, "á");
                item.descripcion = item.descripcion.replace(/&#233;/g, "é");
                item.descripcion = item.descripcion.replace(/&#237;/g, "í");
                item.descripcion = item.descripcion.replace(/&#243;/g, "ó");
                item.descripcion = item.descripcion.replace(/&#250;/g, "ú");
                item.descripcion = item.descripcion.replace(/&#193;/g, "Á");
                item.descripcion = item.descripcion.replace(/&#201;/g, "É");
                item.descripcion = item.descripcion.replace(/&#205;/g, "Í");
                item.descripcion = item.descripcion.replace(/&#211;/g, "Ó");
                item.descripcion = item.descripcion.replace(/&#218;/g, "Ú");
                item.descripcion = item.descripcion.replace(/&#241;/g, "ñ");
            })
        }
    </script>
}