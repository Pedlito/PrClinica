@model BD_PR_01_Clinicas.Models.Entrada

@{
    ViewBag.Title = "Crear";
}

<h2>Nueva Entrada</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.Label("Descripcion", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 form-inline">
                    @Html.TextArea("descripcion", null, new { @class = "form-control", placeholder = "Ingrese una descripcion", rows = "4", cols = "40" })
                    @Html.ValidationMessage("descripcion", null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.Label("Producto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 form-inline">
                    @Html.TextBox("producto", "", new { @class = "form-control" })

                    @*este boton se encarga de mostrar el modal, el data-target hace referencia a un div de clase modal con id= busqueda
                        cada vez que es precionado se muestra el modal. tambien tiene un evento onclick que llama a una funcion getDataAjax() *@
                    @*<input type="button" value="Buscar" class="btn btn-info" data-toggle="modal" data-target="#busqueda" onclick="getDataAjax()" />*@
                    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#busqueda" onclick="getDataAjax()">
                        <span class="glyphicon glyphicon-search"></span> Buscar
                    </button>
                </div>
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-xs-12" id="detalle">
            @* aqui se va a insertar todo el codigo que retorna la vista parcial _Detalle *@
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Cancelar", "Index", null, htmlAttributes: new { @class = "btn btn-danger" })*@
    <a class="btn btn-danger" href="/Entrada/Index" role="button"><span class="glyphicon glyphicon-floppy-remove"></span> Cancelar</a>
</div>

<!-- Modal -->
@*Este es el modal que tiene clase modal fade y el id = busqueda, tiene tres partes, header, body y footer*@
<div class="modal fade" id="busqueda" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Lista de Productos</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input type="button" class="btn btn-info" onclick="cerrar()" value="Nuevo Producto" data-toggle="modal" data-target="#nuevo" />
                </div>
                <div id="cuerpoModal">
                @* en el body no hay nada, pero tiene el id = cuerpoModal puesto que con el codigo javascript voy a insertar aqui
                    la tabla de los productos filtrados *@
            </div>
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>*@
                <button type="button" class="btn btn-danger" data-dismiss="modal"><span class="glyphicon glyphicon-ok"></span> Cerrar</button>
            </div>
        </div>
    </div>
</div>
    <!--CuadroDeDialogo-->
<div id="dialogo" title="Advertencia">
    <p>

    </p>
</div>

<div class="modal fade" id="nuevo" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Nuevo Producto</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_NuevoProducto")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="crearProducto()">Crear y Agregar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        //comportamiento cuadro de dialogo
        $("div#dialogo").dialog({
            autoOpen: false,
            show: "blind",
            width: 400,
            hide: "explode",
            modal: true,
            buttons: {
                Ok: function () {
                    $(this).dialog('close')
                }
            }
        });
        //variable que contentra el array de todos los productos agregados
        var detalle = [];

        //la funcion que se encarga de ir al servidor y realizar la busqueda, en el servidor busca la accion Productos
        //hay una variable filtro que toma el valor de lo escrito en el textbox producto, en la opcion data se pasa esta variable
        //que sera el parametro que recibe en el controlador por ejemplo: acctionResult Productos(string filtro)
        function getDataAjax() {
            var filtro = $("#producto").val();
            $.ajax({
                url: '@Url.Action("Productos", "Entrada")',
                data: { filtro },
                success: function (response) {
                    //el return de la accion Productos es un PartialView, un partialview es un trozo e codigo html que puede ser llamado
                    //desde cualquier vista, en este caso la vista parcial es _Productos, las vistas parciales siempre empiezan con guion bajo .
                    //lo que hace este codigo es que en el div con id = cuerpoModal escribe el html que trae la partiaView, osea el response
                    $('#cuerpoModal').html(response);
                }
            });
        }

        function agregar(codProducto) {
            //evitar que se agregen productos repetidos
            var index = detalle.findIndex(function (element) { return element.codProducto == codProducto });
            if (index == -1) {
                //al llamar a esta funcion se hace un push a detalles que es el array de productos usando el codigo del producto enviado desde la
                //vista parcial y se inicializa con una cantidad de 1
                detalle.push({ codProducto: parseInt(codProducto), cantidad: 1 })
                //este ajax se encarga de ir a la accion MostrarDetalle del controlador y le pasa como parametro el array de productos
                //en la opcion data:
                $.ajax({
                    traditional: true,
                    url: '@Url.Action("MostrarDetalle", "Entrada")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(detalle),
                    success: function (response) {
                        //el return de MostrarDetalle es tambien una vista parcial por lo que la respuesta practicamente es codigo
                        //html que se insertara el el div con id = detalle
                        $('#detalle').html(response);
                    }
                });
            }
            else
            {
                //como el dialog queda abajo no me funciona por esa razon aqui hay un alert
                alert("El Articulo seleccionado ya ha sido agregado");
            }
        }

        function quitar(codProducto) {
            // obtengo el index con findIndex que retorna el idex del elemento en el cual el codigo del producto sea igual al parametro codProducto
            var index = detalle.findIndex(function (element) { return element.codProducto == codProducto });
            //cuando ya tengo el index lo elimino del array
            detalle.splice(index, 1);
            //una vez eliminado del array vuelvo a refrescar la vista parcial _Detalle con la lista ya actulizada, este es el mimo llamdo
            //utilizado en la funcion agregar.
            $.ajax({
                traditional: true,
                url: '@Url.Action("MostrarDetalle", "Entrada")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(detalle),
                success: function (response) {
                    $('#detalle').html(response);
                }
            });
        }

        function cantidad(codProducto, entrada) {
            //esta funcion unicamente se encarga de cambiar la cantidad dentro del array, si la cantidad es "" no se ejecuta puesto
            //que el usuario podria borrar todo y dejarlo en blanco
            if (entrada.value != "") {
                //si existe busco el index donde el codigo de producto sea igual al parametro codProducto
                var index = detalle.findIndex(function (element) { return element.codProducto == codProducto });
                //cambio la propiedad cantidad del array en el index por el parametro cantidad
                detalle[index].cantidad = entrada.value;
            }
            else
            {
                $("div#dialogo").html("<p> Debe especificarse <br/> una cantidad valida </p>");
                $("div#dialogo").dialog("open"); $(entrada).val(1);
            }
        }

        function guardar() {
            if ($("#descripcion").val() == "") {

                $("div#dialogo").html("<p>Por favor Ingrese una descripcion</p>");
                $("div#dialogo").dialog("open");
                //O sea no lo dejes pasar
                return;
            }
            //cuando precionan el boton guardar se ejecuta esta funcion
            //primero hago este json con lo que voy a enviar, la descripcion que la tomo del textbox con id = descripcion y el detalle que es el array
            var datos = { "descripcion": document.getElementById("descripcion").value, "detalle": detalle }
            //con ajax mando a la accion crear y en data paso la variable datos
            $.ajax({
                traditional: true,
                url: '@Url.Action("Crear", "Entrada")',
                contentType: "application/json",
                type: "POST",
                data: JSON.stringify(datos),
                success: function (response) {
                    //cuando ya se creo todo redirecciono al usuario al index
                    location.href = '@Url.Action("Index", "Entrada")';
                },
                error: function (response) {
                    $("div#dialogo").html("<p>Hubo un error al guardar los datos</p>");
                    $("div#dialogo").dialog("open");
                }
            })
        }



    </script>
}