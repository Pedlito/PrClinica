@model BD_PR_01_Clinicas.Models.tbProducto

@{
    ViewBag.Title = "Crear";
}

<h2>Nuevo</h2>

@using (Html.BeginForm(Html.BeginForm("Crear", "Producto", FormMethod.Post, new { @id = "formId", @class = "form-horizontal", role = "form" }))) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Producto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Producto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 entrada">
                @Html.EditorFor(model => model.producto, new { htmlAttributes = new { @class = "form-control", maxlength = 50 } })
                @Html.ValidationMessageFor(model => model.producto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Categoría", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="padding-left: 0px">
                <div class="col-md-4 entrada">
                    @Html.DropDownListFor(model => model.codCategoria, null, "Seleccione una Categoría", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.codCategoria, "", new { @class = "text-danger" })
                </div>
                <button class="btn btn-info" style="display:inline" type="button" data-toggle="modal" data-target="#nuevaCategoria">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </button>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Presentación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="padding-left: 0px">
                <div class="col-md-4  entrada">
                    @Html.DropDownListFor(model => model.codPresentacion, null, "Seleccione una Presentación", htmlAttributes: new { @class = "form-control col-md-3" })
                    @Html.ValidationMessageFor(model => model.codPresentacion, "", new { @class = "text-danger" })
                </div>
                <button class="btn btn-info" style="display:inline" type="button" data-toggle="modal" data-target="#nuevaPresentacion">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </button>
             </div>
        </div>

        <div class="form-group form-inline">
            @Html.Label("Dosis", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2 entrada">
                @Html.EditorFor(model => model.dosis, new { htmlAttributes = new { @class = "form-control", maxlength = 8 } })
                @Html.ValidationMessageFor(model => model.dosis, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.codVolumen, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codVolumen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">
                    <span class="glyphicon glyphicon-plus"></span> Crear
                </button>
            </div>
        </div>
    </div>
}


<div>
    <a href="@Url.Action("Index")" class="btn btn-primary">
        <span class="glyphicon glyphicon-arrow-left"></span> Regresar
    </a>
</div>


<!-- modal para categoría-->
<div class="modal fade" id="nuevaCategoria" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Nueva Categoría</h4>
            </div>
            <div class="modal-body">
                @using(Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("Categoría", htmlAttributes: new { @class = "control-label col-md-2", maxlength = 50 })
                            <div class="col-md-10" id="entrada">
                                <input class="form-control text-box single-line" id="categoria" name="categoria" type="text" value="" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="crearCategoria()">Crear y Asignar</button>
            </div>
        </div>
    </div>
</div>

<!-- modal para Presentación-->
<div class="modal fade" id="nuevaPresentacion" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Nueva Presentación</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("Presentación", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input class="form-control text-box single-line" id="presentacion" name="presentacion" type="text" value="" , maxlength = 50/>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="crearPresentacion()">Crear y Asignar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
 
    <script>
        $.validator.addMethod("soloLetras", function (value, element) {
            return /^[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+$/i.test(value);
            
        }, "Ingrese sólo Letras");

        $("#formId").validate({
            errorClass: 'help-block animation-slideDown',
            errorElement: 'div',
            errorPlacement: function (error, e) {
                e.parents('div.entrada').append(error);
            },
            highlight: function (e) {

                $(e).closest('.entrada').removeClass('has-success has-error').addClass('has-error');
                $(e).closest('.help-block').remove();
            },
            success: function (e) {
                e.closest('.entrada').removeClass('has-success has-error');
                e.closest('.help-block').remove();
            },
            rules: {
                producto: { required: true, soloLetras: true },
                codCategoria: { required: true, number: true },
                codPresentacion: { required: true, number: true },
                dosis: { required: true, number: true },
            },
            messages: {
                producto: {
                    required: "Debe introducir su nombre",
                    soloLetras: "Solo se admite texto"
                },
                codCategoria: {
                    required: "Debe seleccionar una categoria"

                },
                codPresentacion: {
                    required: "Debe seleccionar una presentacion"
                },

                dosis: {
                    required: "Debe introducir una dosis",
                    number: "Solo se admiten numeros"
                }
            }

        });
        //presentacion,categoria
        function crearCategoria() {
            //validacion de categoria
            if ($("#categoria").val().length <= 2) { alert("Nombre invalido, se requiere como minimo 3 caracteres"); return; }
            if (!ValidarSoloLetras($("#categoria").val())) { alert("Nombre invalido para categoria"); return; }
            var categoria = {
                "categoria": document.getElementById("categoria").value,
                "estado": true
            };
            $.ajax({
                url: '@Url.Action("nuevaCategoria", "Producto")',
                type: "POST",
                dataType: "json",
                data: { "categoria": categoria },
                success: function (categoria) {
                    //alert(categoria.codCategoria + " " + categoria.categoria)
                    var item = "<option value='" + categoria.codCategoria + "'>" + categoria.categoria + "</option>"
                    $('#codCategoria').append(item);
                    document.getElementById("codCategoria").value = categoria.codCategoria; $('#nuevaCategoria').modal('hide');
                },
                error: function (response) {
                    alert("error");
                }
            })
        }
        function ValidarSoloLetras(valor) {
            return /^[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+$/i.test(valor);
        }

        function crearPresentacion() {
            // validacion de presentacion
            if ($("#presentacion").val().length <= 2) { alert("Nombre invalido, se requiere como minimo 3 caracteres"); return; }
            if (!ValidarSoloLetras($("#presentacion").val())) { alert("Nombre invalido para categoria"); return; }
            var presentacion = {
                "presentacion": document.getElementById("presentacion").value,
                "estado": true
            };
            $.ajax({
                url: '@Url.Action("NuevaPresentacion", "Producto")',
                type: "POST",
                dataType: "json",
                data: { "presentacion": presentacion },
                success: function (presentacion) {
                    var item = "<option value='" + presentacion.codPresentacion + "'>" + presentacion.presentacion + "</option>"
                    $('#codPresentacion').append(item);
                    document.getElementById("codPresentacion").value = presentacion.codPresentacion;
                    $('#nuevaPresentacion').modal('hide');
                },
                error: function (response) {
                    alert("error");
                }
            })
        }

    </script>    
}