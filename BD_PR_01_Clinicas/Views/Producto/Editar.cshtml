@model BD_PR_01_Clinicas.Models.tbProducto

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>

@using (Html.BeginForm(Html.BeginForm("Editar", "Producto", FormMethod.Post, new { @id = "formId", @class = "form-horizontal", role = "form" })))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Producto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.codProducto)

    <div class="form-group">
        @Html.Label("Producto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 entrada">
            @Html.EditorFor(model => model.producto, new { htmlAttributes = new { @class = "form-control", maxlength = 50 } })
            @Html.ValidationMessageFor(model => model.producto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Categoría", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 entrada">
            @Html.DropDownListFor(model => model.codCategoria, null, "Seleccione una Categoría", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.codCategoria, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Presentación", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 entrada">
            @Html.DropDownListFor(model => model.codPresentacion, null, "Seleccione una Presentación", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.codPresentacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group form-inline">
        @Html.Label("Dosis", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-xs-2 entrada">
            @Html.EditorFor(model => model.dosis, new { htmlAttributes = new { @class = "form-control", maxlength = 8, onkeypress = "return numerico(event)" } })
            @Html.ValidationMessageFor(model => model.dosis, "", new { @class = "text-danger" })
        </div>
        <div class="col-xs-2">
            @Html.DropDownListFor(model => model.codVolumen, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.codVolumen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group form-inline">
        @Html.Label("Segunda Dosis", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2 entrada">
            @Html.EditorFor(model => model.dosis2, new { htmlAttributes = new { @class = "form-control", maxlength = 8, onkeypress = "return numerico(event)" } })
            @Html.ValidationMessageFor(model => model.dosis2, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.codVolumen2, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.codVolumen2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" value="Guardar" class="btn btn-success" />*@
            <button type="submit" class="btn btn-success">
                <span class="glyphicon glyphicon-floppy-save"></span> Guardar
            </button>
        </div>
    </div>
</div>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-primary">
        <span class="glyphicon glyphicon-arrow-left"></span> Regresar
    </a>
</div>
@section Scripts {
    @*JqueriVal permite la validacion  escrita abajo*@
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $.validator.addMethod("soloLetras", function (value, element) {
        return /^[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+$/i.test(value);
    }, "Ingrese sólo Letras");

    $.validator.addMethod("decimales", function (value, element) {
        return /^[0-9]+\,[0-9]+$/i.test(value);
    }, "Ingrese sólo numeros");

    $("#formId").validate({
        errorClass: 'help-block animation-slideDown',
        errorElement: 'div',
        errorPlacement: function (error, e) {
            e.parents('.form-group > div').append(error);
        },
        highlight: function (e) {

            $(e).closest('.entrada').removeClass('has-success has-error').addClass('has-error');
            $(e).closest('.help-block').remove();
        },
        success: function (e) {
            e.closest('.entrada').removeClass('has-success has-error');
            e.closest('.help-block').remove();
        },
        rules: {
            producto: { required: true, soloLetras: true },
            codCategoria: { required: true, number: true },
            codPresentacion: { required: true, number: true },
            dosis: { required: true, decimales: true},
        },
        messages: {
            producto: {
                required: "Debe introducir su nombre",
                soloLetras:"Solo se admite texto"
            },
            codCategoria:{
                required: "Debe seleccionar una categoria"

            },
            codPresentacion: {
                required: "Debe seleccionar una presentacion"
            },

            dosis: {
                required: "Debe introducir una dosis",
                number: "Solo se admiten numeros"
            }
        }

        });

        function numerico(event) {
            var n = event.charCode;
            var respuesta = ((n >= 48 && n <= 57) || n == 0);
            return respuesta;
        }
    </script>
}